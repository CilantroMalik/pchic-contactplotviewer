{"version":3,"sources":["features/assetChooser/assetSlice.js","features/infoModal/infoSlice.js","features/assetChooser/AssetChooser.js","features/plotViewer/PlotViewer.js","App.js","app/geneListSlice.js","app/store.js","index.js"],"names":["assetSlice","createSlice","name","initialState","reducers","setCellType1","state","action","cellType1","payload","setCellType2","cellType2","setGene","gene","actions","infoSlice","setVisible","visible","AssetChooser","options","useSelector","assets","useState","typesSelected","setTypesSelected","geneSelected","setGeneSelected","selecting","setSelecting","dispatch","useDispatch","cellButtons","map","cellType","disabled","className","onClick","includes","temp","push","length","onCellTypeClicked","style","margin","padding","nanoid","width","marginTop","marginLeft","borderColor","backgroundColor","color","flexBasis","placeholder","type","onChange","e","target","value","PlotViewer","allowedGenes","geneList","search","setSearch","displayedItems","setDisplayedItems","modifiedGene","replace","imageURL1","imageURL2","imageExists","imageURL","http","XMLHttpRequest","open","send","status","subGeneStartsWith","geneComposite","searchStr","split","some","subGene","startsWith","getNumGenes","filter","toLowerCase","geneTableRows","i","row","slice","geneName","fontSize","textAlign","overflow","filteredGenes","Math","min","increment","marginRight","height","borderRadius","src","alt","display","flexDirection","justifyContent","alignContent","alignSelf","marginBottom","tableLayout","wordBreak","App","plotType","assetType","info","transition","position","top","left","geneReq","process","responseText","val","substring","geneListSlice","setGeneList","store","configureStore","reducer","assetReducer","infoReducer","geneListReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAIMA,EAAaC,YAAY,CAC3BC,KAAM,SACNC,aAJiB,CAAC,UAAa,OAAQ,UAAa,QAAS,KAAQ,QAKrEC,SAAU,CACNC,aADM,SACOC,EAAOC,GAAUD,EAAME,UAAYD,EAAOE,SACvDC,aAFM,SAEOJ,EAAOC,GAAUD,EAAMK,UAAYJ,EAAOE,SACvDG,QAHM,SAGEN,EAAOC,GAAUD,EAAMO,KAAON,EAAOE,Y,EAIET,EAAWc,QAAnDT,E,EAAAA,aAAcK,E,EAAAA,aAAcE,E,EAAAA,QAE5BZ,IAAf,QCZMe,EAAYd,YAAY,CAC1BC,KAAM,OACNC,aAJiB,CAAC,SAAW,GAK7BC,SAAU,CACNY,WADM,SACKV,EAAOC,GAAUD,EAAMW,QAAUV,EAAOE,YAI5CO,EAAeD,EAAUD,QAAzBE,WAEAD,IAAf,Q,OCPaG,EAAe,WACxB,IAAMC,EAAUC,aAAY,SAAAd,GAAK,OAAIA,EAAMe,UADb,EAEYC,mBAAS,IAFrB,mBAEvBC,EAFuB,KAERC,EAFQ,OAGUF,mBAAS,QAHnB,mBAGvBG,EAHuB,KAGTC,EAHS,OAIIJ,oBAAS,GAJb,mBAIvBK,EAJuB,KAIZC,EAJY,KAKxBC,EAAWC,cA0BXC,EAxBY,CAAC,OAAQ,KAAM,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,KAAM,MAAO,QAAS,KAAM,OAAQ,OAAQ,MAAO,KAAM,QAwBnGC,KAAI,SAAAC,GAAQ,OACtC,wBAAQC,UAAWP,EAAWQ,UAAYhB,EAAQX,YAAcyB,GAAYd,EAAQR,YAAcsB,EAAY,SAAW,eAClGG,QAAS,kBAxBV,SAACH,GACvB,IAAKV,EAAcc,SAASJ,GAAW,CACnC,IAAMK,EAAOf,EACbe,EAAKC,KAAKN,GACVT,EAAiBc,GAEQ,IAAzBf,EAAciB,SACdZ,GAAa,GACbC,EAASxB,EAAakB,EAAc,KACpCM,EAASnB,EAAaa,EAAc,MAeFkB,CAAkBR,IAAWS,MAAO,CAACC,OAAQ,MAAOC,QAAS,OADnG,SAC4GX,GAA/FY,kBAGjB,OACI,qCACI,sBAAKV,UAAU,WAAWO,MAAO,CAACI,MAAO,OAAQC,UAAW,SAAUC,WAAY,UAAlF,UACI,wBAAQN,MAAO,CAACC,OAAQ,OAAQP,QAflB,WACtBR,GAAa,GACbJ,EAAiB,KAamDW,UAAU,gBAAtE,SAAuFR,EAAY,gBAAkB,wBACpHI,EACD,wBAAQI,UAAU,eAAeC,QAZzB,WAAQP,EAASb,GAAW,KAa5B0B,MAAO,CAACO,YAAa,eAAgBC,gBAAiB,eAAgBP,OAAQ,MAAOC,QAAS,OAAQI,WAAY,OAD1H,4BAGJ,sBAAKb,UAAU,WAAWO,MAAO,CAACI,MAAO,OAAQC,UAAW,SAAUC,WAAY,UAAlF,UACI,uBAAON,MAAO,CAACS,MAAO,eAAgBC,UAAW,MAAOJ,WAAY,SAAUD,UAAW,UAClFM,YAAa5B,EAAc6B,KAAK,OAAOC,SAAU,SAACC,GAAQ9B,EAAgB8B,EAAEC,OAAOC,UAC1F,wBAAQhB,MAAO,CAACM,WAAY,OAAQD,UAAW,UAAWX,QAzBhD,WAAQP,EAASjB,EAAQa,KAyBnC,yBACA,wBAAQU,UAAU,eAAeO,MAAO,CAACM,WAAY,OAAQD,UAAW,SAAUE,YAAa,eAAgBC,gBAAiB,gBAAiBd,QAAS,kBAAMP,EAASjB,EAAQ,YAAjL,iCCjDH+C,EAAa,WACtB,IAAMxC,EAAUC,aAAY,SAAAd,GAAK,OAAIA,EAAMe,UACrCuC,EAAexC,aAAY,SAAAd,GAAK,OAAIA,EAAMuD,SAASA,YACnDhC,EAAWC,cAHW,EAIAR,mBAAS,IAJT,mBAIrBwC,EAJqB,KAIbC,EAJa,OAKgBzC,mBAAS,MALzB,mBAKrB0C,EALqB,KAKLC,EALK,KAOtBC,EAAe/C,EAAQN,KAAKsD,QAAQ,IAAK,OAEzCC,EAAY,CAAC,OAAQ,KAAM,MAAO,OAAQ,QAAQ/B,SAASlB,EAAQX,WACrE,sFAAsFW,EAAQX,UAAU,IAAI0D,EAAa,OACxH,CAAC,OAAQ,OAAQ,KAAM,MAAO,QAAS,MAAM7B,SAASlB,EAAQX,WAC3D,uFAAuFW,EAAQX,UAAU,IAAI0D,EAAa,OACtH,uFAAuF/C,EAAQX,UAAU,IAAI0D,EAAa,OAGhIG,EAAY,CAAC,OAAQ,KAAM,MAAO,OAAQ,QAAQhC,SAASlB,EAAQR,WACrE,sFAAsFQ,EAAQR,UAAU,IAAIuD,EAAa,OACxH,CAAC,OAAQ,OAAQ,KAAM,MAAO,QAAS,MAAM7B,SAASlB,EAAQR,WACvD,uFAAuFQ,EAAQR,UAAU,IAAIuD,EAAa,OAC1H,uFAAuF/C,EAAQR,UAAU,IAAIuD,EAAa,OAGtI,SAASI,EAAYC,GACjB,IAAIC,EAAO,IAAIC,eAGf,OAFAD,EAAKE,KAAK,OAAQH,GAAU,GAC5BC,EAAKG,OACkB,MAAhBH,EAAKI,OAGhB,SAASC,EAAkBC,EAAeC,GAEtC,OADiBD,EAAcE,MAAM,KACrBC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,WAAWJ,MASvD,SAASK,IACL,MAAe,KAAXtB,EAAwB,MACdF,EAAayB,QAAO,SAAAxE,GAAI,OAAIgE,EAAkBhE,EAAKyE,cAAexB,EAAOwB,kBAAgB9C,OARtF,WAAjBrB,EAAQN,MAAuByD,EAAYF,IAAeE,EAAYD,IACtExC,EAASjB,EAAQ,UAUrB,IAAM2E,EAAgB,GACtB,GAAe,KAAXzB,EACA,IAAK,IAAI0B,EAAIxB,EAAe,KAAMwB,EAAIxB,EAAgBwB,GAAK,GAAI,CAC3D,IAAMC,EAAM,6BACP7B,EAAa8B,MAAMF,EAAGA,EAAI,IAAIxD,KAAI,SAAA2D,GAC/B,OAAQ,oBACIjD,MAAO,CAACkD,SAAU,UAAWC,UAAW,SAAUC,SAAU,UADhE,SAC4EH,GADnE9C,oBAIzB0C,EAAchD,KAAKkD,QAIvB,IADA,IAAMM,EAAgBnC,EAAayB,QAAO,SAAAxE,GAAI,OAAIgE,EAAkBhE,EAAKyE,cAAexB,EAAOwB,kBACtFE,EAAIxB,EAAe,KAAMwB,EAAIQ,KAAKC,IAAIjC,EAAgB+B,EAAcvD,QAASgD,GAAK,GAAI,CAC3F,IAAMU,EAAYV,EAAI,IAAMO,EAAcvD,OAAS,GAAKuD,EAAcvD,OAASgD,EACzEC,EAAM,6BACPM,EAAcL,MAAMF,EAAGA,EAAIU,GAAWlE,KAAI,SAAA2D,GACvC,OAAQ,oBAAmBjD,MAAO,CAACkD,SAAU,UAAWC,UAAW,SAAUC,SAAU,UAA/E,SAA2FH,GAAlF9C,oBAGzB0C,EAAchD,KAAKkD,GAI3B,OACI,qCACwB,UAAjBtE,EAAQN,MAAqC,WAAjBM,EAAQN,MACnC,sBAAKsB,UAAU,WAAWO,MAAO,CAACI,MAAO,OAAQC,UAAW,SAAUC,WAAY,UAAlF,UACI,oBAAIN,MAAO,CACPS,MAAO,eACPJ,UAAW,MACXoD,YAAa,QAHjB,SAIIhF,EAAQX,YACZ,qBAAKkC,MAAO,CAACI,MAAO,MAAOsD,OAAQ,MAAOzD,OAAQ,OAAQ0D,aAAc,QACnEC,IAAKlC,EACLmC,IAAI,KACT,qBAAK7D,MAAO,CAACI,MAAO,MAAOsD,OAAQ,MAAOzD,OAAQ,OAAQ0D,aAAc,QACnEC,IAAKjC,EACLkC,IAAI,KACT,oBAAI7D,MAAO,CACPS,MAAO,eACPJ,UAAW,MACXC,WAAY,QAHhB,SAII7B,EAAQR,gBAGA,UAAjBQ,EAAQN,MAAqC,WAAjBM,EAAQN,OACnC,sBAAK6B,MAAO,CAAC8D,QAAS,OAAQC,cAAe,SAAUC,eAAgB,SAAUC,aAAc,UAA/F,UACI,oBAAIjE,MAAO,CAACS,MAAO,gBAAnB,SAAsD,WAAjBhC,EAAQN,KAAoB,+JAAiK,gDAElO,sBAAKsB,UAAU,WAAf,UACI,uBAAOmB,KAAK,OAAOD,YAAY,gCAAgCE,SAAU,SAACC,GAAOO,EAAUP,EAAEC,OAAOC,OAAQO,EAAkB,OACvHvB,MAAO,CAACS,MAAO,eAAgBL,MAAO,MAAO8D,UAAW,YAC/D,wBAAQlE,MAAO,CAACM,WAAY,OAAQZ,QAAS,kBAAM2B,EAAU,KAA7D,sBAEJ,sBAAK5B,UAAU,WAAf,UACI,wBAAQD,SAA6B,OAAnB8B,EAAyB5B,QAAS,kBAAM6B,EAAkBD,EAAe,MACnFtB,MAA0B,OAAnBsB,EAA0B,CAACjB,UAAW,KAAM8D,aAAc,KAAMV,YAAa,MAAOjD,gBAAiB,OAAQD,YAAa,QAAU,CAACF,UAAW,KAAM8D,aAAc,KAAMV,YAAa,OADtM,iCAEA,qBAAIzD,MAAO,CAACS,MAAO,gBAAnB,sCAA8Da,EAAe,IAA7E,OAAuFA,EAAe,EAAtG,OACA,wBAAQ9B,SAAU8B,EAAiBoB,IAAehD,QAAS,kBAAM6B,EAAkBD,EAAe,MAC1FtB,MAAOsB,EAAiBoB,IAAgB,CAACrC,UAAW,KAAM8D,aAAc,KAAM7D,WAAY,MAAOE,gBAAiB,OAAQD,YAAa,QAAU,CAACF,UAAW,KAAM8D,aAAc,KAAM7D,WAAY,OAD3M,gCAGJ,wBAAON,MAAO,CAACI,MAAO,MAAOE,WAAY,KAAMmD,YAAa,KAAMW,YAAa,QAASC,UAAW,aAAnG,UACI,gCAAO,+BAAI,uBAAS,uBAAS,uBAAS,uBAAS,uBAAS,uBAAS,uBAAS,uBAAS,uBAAS,4BAC5F,gCAAQxB,IACR,gCAAO,+BAAI,uBAAS,uBAAS,uBAAS,uBAAS,uBAAS,uBAAS,uBAAS,uBAAS,uBAAS,sCClFrGyB,MA3Bf,WAEE,IAAMnF,EAAWC,cACXmF,EAAW7F,aAAY,SAAAd,GAAK,OAAIA,EAAMe,OAAO6F,aAC7CC,EAAO/F,aAAY,SAAAd,GAAK,OAAIA,EAAM6G,KAAKlG,WAK7C,OACI,qCACE,sBAAKkB,UAAU,MAAMO,MAAOyE,EAAO,CAACC,WAAY,uBAAwB/B,OAAQ,2CAA6C,CAAC+B,WAAY,uBAA1I,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEAD,GACF,sBAAKzE,MAAO,CAAC2D,aAAc,OAAQgB,SAAU,WAAYC,IAAK,OAAQC,KAAM,OAC1EzE,MAAO,MAAOI,gBAAiB,OAAQ2C,UAAW,UADpD,UAEE,oBAAInD,MAAO,CAACS,MAAO,gBAAnB,SAAqC8D,IACrC,mBAAGvE,MAAO,CAACC,OAAQ,MAAnB,SAbU,8OAcV,wBAAQP,QAAS,kBAAMP,EAASb,GAAW,KAAS0B,MAAO,CAACmE,aAAc,MAA1E,0BC1BNW,EAAU,IAAI/C,eAClB+C,EAAQ9C,KAAK,MAAO+C,+CAA8C,GAClED,EAAQ7C,OACR,IAEMxE,EAAe,CAAC,SAFDqH,EAAQE,aAAa1C,MAAM,MAAMhD,KAAI,SAAA2F,GAAG,OAAIA,EAAIC,UAAU,EAAGD,EAAInF,OAAO,OAIvFqF,EAAgB5H,YAAY,CAC9BC,KAAM,WACNC,aAAcA,EACdC,SAAU,CACN0H,YADM,SACMxH,EAAOC,GAAUD,EAAMuD,SAAWtD,EAAOE,YAM9CoH,GAFgBA,EAAc/G,QAA9BgH,YAEAD,EAAf,SCdaE,EAAQC,YAAe,CAChCC,QAAS,CACL5G,OAAQ6G,EACRf,KAAMgB,EACNtE,SAAUuE,KCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRS,SAASC,eAAe,U","file":"static/js/main.256100b3.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\"cellType1\": \"aCD4\", \"cellType2\": \"naCD4\", \"gene\": \"IL7R\"}\n\nconst assetSlice = createSlice({\n    name: 'assets',\n    initialState,\n    reducers: {\n        setCellType1(state, action) { state.cellType1 = action.payload },\n        setCellType2(state, action) { state.cellType2 = action.payload },\n        setGene(state, action) { state.gene = action.payload }\n    }\n})\n\nexport const { setCellType1, setCellType2, setGene } = assetSlice.actions\n\nexport default assetSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\"visible\": false}\n\nconst infoSlice = createSlice({\n    name: \"info\",\n    initialState,\n    reducers: {\n        setVisible(state, action) { state.visible = action.payload }\n    }\n})\n\nexport const { setVisible } = infoSlice.actions\n\nexport default infoSlice.reducer","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCellType1, setCellType2, setGene } from \"./assetSlice\";\nimport { setVisible } from \"../infoModal/infoSlice\";\nimport '../../main.css';\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nexport const AssetChooser = () => {\n    const options = useSelector(state => state.assets)\n    const [typesSelected, setTypesSelected] = useState([])\n    const [geneSelected, setGeneSelected] = useState(\"IL7R\")\n    const [selecting, setSelecting] = useState(false)\n    const dispatch = useDispatch()\n\n    const cellTypes = [\"aCD4\", \"EP\", \"Ery\", \"FoeT\", \"Mac0\", \"Mac1\", \"Mac2\", \"MK\", \"Mon\", \"naCD4\", \"nB\", \"nCD4\", \"nCD8\", \"Neu\", \"tB\", \"tCD8\"]\n\n    const onCellTypeClicked = (cellType) => {\n        if (!typesSelected.includes(cellType)) {\n            const temp = typesSelected\n            temp.push(cellType)\n            setTypesSelected(temp)\n        }\n        if (typesSelected.length === 2) {\n            setSelecting(false)\n            dispatch(setCellType1(typesSelected[0]))\n            dispatch(setCellType2(typesSelected[1]))\n        }\n    }\n\n    const onGeneClicked = () => { dispatch(setGene(geneSelected)) }\n\n    const onReselectClicked = () => {\n        setSelecting(true)\n        setTypesSelected([])\n    }\n\n    const infoClicked = () => { dispatch(setVisible(true)) }\n\n    const cellButtons = cellTypes.map(cellType => (\n        <button disabled={!selecting} className={(options.cellType1 === cellType || options.cellType2 === cellType) ? \"button\" : \"muted-button\"}\n                key={nanoid()} onClick={() => onCellTypeClicked(cellType)} style={{margin: \"3px\", padding: \"8px\"}}>{cellType}</button>\n    ))\n\n    return (\n        <>\n            <div className=\"flex-row\" style={{width: \"100%\", marginTop: \"0.5rem\", marginLeft: \"0.5rem\"}}>\n                <button style={{margin: \"3px\"}} onClick={onReselectClicked} className=\"accent-button\">{selecting ? \"Select two...\" : \"Reselect Cell Types\"}</button>\n                {cellButtons}\n                <button className=\"round-button\" onClick={infoClicked}\n                        style={{borderColor: \"mediumpurple\", backgroundColor: \"mediumpurple\", margin: \"3px\", padding: \"12px\", marginLeft: \"6px\"}}>Figure Info</button>\n            </div>\n            <div className=\"flex-row\" style={{width: \"100%\", marginTop: \"0.5rem\", marginLeft: \"0.5rem\"}}>\n                <input style={{color: \"antiquewhite\", flexBasis: \"50%\", marginLeft: \"0.2rem\", marginTop: \"0.2rem\"}}\n                       placeholder={geneSelected} type=\"text\" onChange={(e) => { setGeneSelected(e.target.value) }}/>\n                <button style={{marginLeft: \"10px\", marginTop: \"0.2rem\"}} onClick={onGeneClicked}>Choose Gene</button>\n                <button className=\"round-button\" style={{marginLeft: \"10px\", marginTop: \"0.2rem\", borderColor: \"mediumpurple\", backgroundColor: \"mediumpurple\"}} onClick={() => dispatch(setGene(\"ERROR3\"))}>Search Genes</button>\n            </div>\n        </>\n    )\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport '../../main.css';\nimport { setGene } from \"../assetChooser/assetSlice\";\n\nexport const PlotViewer = () => {\n    const options = useSelector(state => state.assets)\n    const allowedGenes = useSelector(state => state.geneList.geneList)\n    const dispatch = useDispatch()\n    const [search, setSearch] = useState(\"\")\n    const [displayedItems, setDisplayedItems] = useState(1001)\n\n    const modifiedGene = options.gene.replace(\";\", \"%3B\")\n\n    const imageURL1 = [\"aCD4\", \"EP\", \"Ery\", \"FoeT\", \"Mac0\"].includes(options.cellType1) ?\n        \"https://raw.githubusercontent.com/RohanMalikRCDS/GenomeWideContactPlotStorage/main/\"+options.cellType1+\"/\"+modifiedGene+\".jpg\" :\n        ([\"Mac1\", \"Mac2\", \"MK\", \"Mon\", \"naCD4\", \"nB\"].includes(options.cellType1) ?\n            \"https://raw.githubusercontent.com/RohanMalikRCDS/GenomeWideContactPlotStorage2/main/\"+options.cellType1+\"/\"+modifiedGene+\".jpg\" :\n                \"https://raw.githubusercontent.com/RohanMalikRCDS/GenomeWideContactPlotStorage3/main/\"+options.cellType1+\"/\"+modifiedGene+\".jpg\"\n        )\n\n    const imageURL2 = [\"aCD4\", \"EP\", \"Ery\", \"FoeT\", \"Mac0\"].includes(options.cellType2) ?\n        \"https://raw.githubusercontent.com/RohanMalikRCDS/GenomeWideContactPlotStorage/main/\"+options.cellType2+\"/\"+modifiedGene+\".jpg\" :\n        ([\"Mac1\", \"Mac2\", \"MK\", \"Mon\", \"naCD4\", \"nB\"].includes(options.cellType2) ?\n                \"https://raw.githubusercontent.com/RohanMalikRCDS/GenomeWideContactPlotStorage2/main/\"+options.cellType2+\"/\"+modifiedGene+\".jpg\" :\n                \"https://raw.githubusercontent.com/RohanMalikRCDS/GenomeWideContactPlotStorage3/main/\"+options.cellType2+\"/\"+modifiedGene+\".jpg\"\n        )\n\n    function imageExists(imageURL) {\n        let http = new XMLHttpRequest();\n        http.open('HEAD', imageURL, false);\n        http.send();\n        return http.status !== 404;\n    }\n\n    function subGeneStartsWith(geneComposite, searchStr) {\n        const subGenes = geneComposite.split(\";\")\n        return subGenes.some(subGene => subGene.startsWith(searchStr))\n    }\n\n    if (options.gene !== \"ERROR3\" && (!imageExists(imageURL1) || !imageExists(imageURL2))) {\n        dispatch(setGene(\"ERROR\"))\n    }\n\n\n\n    function getNumGenes() {\n        if (search === \"\") { return 20701; }\n        else { return allowedGenes.filter(gene => subGeneStartsWith(gene.toLowerCase(), search.toLowerCase())).length }\n    }\n\n    const geneTableRows = []\n    if (search === \"\") {\n        for (let i = displayedItems-1001; i < displayedItems; i += 10) {\n            const row = <tr>\n                {allowedGenes.slice(i, i + 10).map(geneName => {\n                    return (<td key={nanoid()}\n                                style={{fontSize: \"0.85rem\", textAlign: \"center\", overflow: \"hidden\"}}>{geneName}</td>)\n                })}\n            </tr>\n            geneTableRows.push(row)\n        }\n    } else {\n        const filteredGenes = allowedGenes.filter(gene => subGeneStartsWith(gene.toLowerCase(), search.toLowerCase()))\n        for (let i = displayedItems-1001; i < Math.min(displayedItems, filteredGenes.length); i += 10) {\n            const increment = i + 10 <= filteredGenes.length ? 10 : filteredGenes.length - i\n            const row = <tr>\n                {filteredGenes.slice(i, i + increment).map(geneName => {\n                    return (<td key={nanoid()} style={{fontSize: \"0.85rem\", textAlign: \"center\", overflow: \"hidden\"}}>{geneName}</td>)\n                })}\n            </tr>\n            geneTableRows.push(row)\n        }\n    }\n\n    return (\n        <>\n            { (options.gene !== \"ERROR\" && options.gene !== \"ERROR3\") &&\n                <div className=\"flex-row\" style={{width: \"100%\", marginTop: \"0.5rem\", marginLeft: \"0.5rem\"}}>\n                    <h2 style={{\n                        color: \"antiquewhite\",\n                        marginTop: \"19%\",\n                        marginRight: \"10px\"\n                    }}>{options.cellType1}</h2>\n                    <img style={{width: \"38%\", height: \"38%\", margin: \"10px\", borderRadius: \"10px\"}}\n                         src={imageURL1}\n                         alt=\"\"/>\n                    <img style={{width: \"38%\", height: \"38%\", margin: \"10px\", borderRadius: \"10px\"}}\n                         src={imageURL2}\n                         alt=\"\"/>\n                    <h2 style={{\n                        color: \"antiquewhite\",\n                        marginTop: \"19%\",\n                        marginLeft: \"10px\"\n                    }}>{options.cellType2}</h2>\n                </div>\n            }\n            { (options.gene === \"ERROR\" || options.gene === \"ERROR3\") &&\n                <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignContent: \"center\"}}>\n                    <h3 style={{color: \"antiquewhite\"}}>{options.gene !== \"ERROR3\" ? \"That gene isn't available in at least one of the requested cell types. Search for another gene below, or choose different cell types and reselect your gene.\" : \"Find a gene to examine with the tool below.\"}</h3>\n\n                    <div className=\"flex-row\">\n                        <input type=\"text\" placeholder=\"Start typing a gene to search\" onChange={(e) => {setSearch(e.target.value); setDisplayedItems(1001)}}\n                               style={{color: \"antiquewhite\", width: \"20%\", alignSelf: \"center\"}}/>\n                        <button style={{marginLeft: \"8px\"}} onClick={() => setSearch(\"\")}>Clear</button>\n                    </div>\n                    <div className=\"flex-row\">\n                        <button disabled={displayedItems === 1001} onClick={() => setDisplayedItems(displayedItems-1000)}\n                                style={displayedItems === 1001 ? {marginTop: \"1%\", marginBottom: \"1%\", marginRight: \"10%\", backgroundColor: \"gray\", borderColor: \"gray\"} : {marginTop: \"1%\", marginBottom: \"1%\", marginRight: \"10%\"}}>Previous 1000 items</button>\n                        <h5 style={{color: \"antiquewhite\"}}>Available Genes (showing {displayedItems-1000} to {displayedItems-1})</h5>\n                        <button disabled={displayedItems > getNumGenes()} onClick={() => setDisplayedItems(displayedItems+1000)}\n                                style={displayedItems > getNumGenes() ? {marginTop: \"1%\", marginBottom: \"1%\", marginLeft: \"10%\", backgroundColor: \"gray\", borderColor: \"gray\"} : {marginTop: \"1%\", marginBottom: \"1%\", marginLeft: \"10%\"}}>Next 1000 items</button>\n                    </div>\n                    <table style={{width: \"94%\", marginLeft: \"3%\", marginRight: \"3%\", tableLayout: \"fixed\", wordBreak: \"break-all\"}}>\n                        <thead><tr><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead>\n                        <tbody>{geneTableRows}</tbody>\n                        <tfoot><tr><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\n                    </table>\n                </div>\n            }\n        </>\n    )\n}\n","import './App.css';\nimport './main.css';\nimport { AssetChooser } from './features/assetChooser/AssetChooser';\nimport { PlotViewer } from './features/plotViewer/PlotViewer'\nimport React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setVisible } from \"./features/infoModal/infoSlice\";\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const plotType = useSelector(state => state.assets.assetType)\n  const info = useSelector(state => state.info.visible)\n\n  let explanation = \"These plots depict the raw counts of PC-HiC observed interactions vs genomic distance from the bait locus. \" +\n      \"The p-values corresponding to the determined significance of each interaction are also plotted in red on a negative log scale.\"\n\n  return (\n      <>\n        <div className=\"App\" style={info ? {transition: \"filter 0.3s ease-out\", filter: \"blur(10px) opacity(50%) brightness(50%)\"} : {transition: \"filter 0.3s ease-in\"}}>\n          <AssetChooser />\n          <PlotViewer />\n        </div>\n        { info &&\n        <div style={{borderRadius: \"15px\", position: \"absolute\", top: \"25vh\", left: \"25vw\",\n          width: \"50%\", backgroundColor: \"gray\", textAlign: \"center\"}}>\n          <h3 style={{color: \"antiquewhite\"}}>{plotType}</h3>\n          <p style={{margin: \"3%\"}}>{explanation}</p>\n          <button onClick={() => dispatch(setVisible(false))} style={{marginBottom: \"3%\"}}>Close</button>\n        </div>\n        }\n      </>\n  );\n}\n\nexport default App;","import { createSlice } from '@reduxjs/toolkit'\n\nlet geneReq = new XMLHttpRequest()\ngeneReq.open('GET', process.env.PUBLIC_URL+\"/geneList/genes.txt\", false)\ngeneReq.send()\nconst allowedGenes = geneReq.responseText.split(\", \").map(val => val.substring(0, val.length-4))\n\nconst initialState = {\"geneList\": allowedGenes}\n\nconst geneListSlice = createSlice({\n    name: \"geneList\",\n    initialState: initialState,\n    reducers: {\n        setGeneList(state, action) { state.geneList = action.payload }\n    }\n})\n\nexport const { setGeneList } = geneListSlice.actions\n\nexport default geneListSlice.reducer","import { configureStore } from '@reduxjs/toolkit';\nimport assetReducer from '../features/assetChooser/assetSlice';\nimport infoReducer from '../features/infoModal/infoSlice';\nimport geneListReducer from './geneListSlice';\n\nexport const store = configureStore({\n    reducer: {\n        assets: assetReducer,\n        info: infoReducer,\n        geneList: geneListReducer\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}